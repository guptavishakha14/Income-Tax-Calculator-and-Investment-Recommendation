{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import type { TextFieldProps } from '@mui/material';\nimport { TextField, InputAdornment } from '@mui/material';\nimport React, { useMemo } from 'react';\n\nexport interface HTMLNumericElement\n  extends Omit<HTMLInputElement, 'value' | 'name'> {\n  value: number | null | '';\n  name?: string;\n}\n\nexport type NumericInputProps = Omit<TextFieldProps, 'onChange'> & {\n  value?: number | string;\n  onChange?(e: React.ChangeEvent<HTMLNumericElement>): void;\n\n  precision: number;\n  thousandChar: string;\n  decimalChar: string;\n  prefix?: string;\n  suffix?: string;\n};\n\nfunction verifyNumber(string: string) {\n  const numericRepresentation = string.replace(/[,.]/g, '');\n\n  return {\n    isNumber: !isNaN(Number(numericRepresentation)),\n    numberFormat: !isNaN(Number(numericRepresentation))\n      ? Number(numericRepresentation)\n      : null\n  };\n}\n\nfunction NumericInput(props: NumericInputProps) {\n  const {\n    value,\n    precision,\n    thousandChar,\n    decimalChar,\n    prefix,\n    suffix,\n    ...inputProps\n  } = props;\n  const defaultValue = value === null ? NaN : Number(value);\n\n  const formatter = useMemo(\n    () =>\n      new Intl.NumberFormat('pt-BR', {\n        minimumFractionDigits: precision,\n        maximumFractionDigits: precision\n      }),\n\n    [thousandChar, decimalChar]\n  );\n\n  if (!decimalChar) {\n    throw new Error('Decimal char should not be an empty string!');\n  }\n  if (!thousandChar) {\n    throw new Error('Thousand char should not be an empty string!');\n  }\n\n  function format(number: number) {\n    const result = formatter\n      .format(number)\n      .replace(',', decimalChar)\n      .replaceAll('.', thousandChar);\n\n    return result;\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLInputElement>): void {\n    if (e.key === ' ') e.preventDefault();\n\n    if (\n      e.ctrlKey ||\n      e.shiftKey ||\n      e.key === 'Backspace' ||\n      e.key === 'Enter' ||\n      e.key === 'Tab'\n    )\n      return;\n    if (!verifyNumber(e.key).isNumber) e.preventDefault();\n  }\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\n    const newEvent: React.ChangeEvent<HTMLNumericElement> = {\n      ...e,\n      currentTarget: {\n        ...e.currentTarget,\n        name: props.name,\n        value: 0\n      },\n      target: {\n        ...e.target,\n        name: props.name,\n        value: 0\n      }\n    };\n    let numericRepresentation = e.target.value;\n\n    numericRepresentation = numericRepresentation.replaceAll(thousandChar, '');\n    numericRepresentation = numericRepresentation.replace(decimalChar, '');\n\n    if (numericRepresentation === '') {\n      e.target.value = '';\n      newEvent.target.value = null;\n      newEvent.currentTarget.value = null;\n      return props.onChange && props.onChange(newEvent);\n    }\n\n    const { isNumber, numberFormat } = verifyNumber(numericRepresentation);\n    if (isNumber && numberFormat !== null) {\n      const withPrecision = numberFormat / 10 ** precision;\n\n      const formattedNumber = format(withPrecision);\n\n      newEvent.target.value = withPrecision;\n      newEvent.currentTarget.value = withPrecision;\n\n      e.target.value = formattedNumber;\n\n      props.onChange && props.onChange(newEvent);\n    }\n  }\n\n  const hasValue = value !== undefined;\n  let inputDefaultValue;\n  let inputValue;\n\n  if (hasValue) {\n    if (isNaN(defaultValue) || value === '') {\n      inputValue = null;\n    } else {\n      inputValue = format(defaultValue);\n    }\n  }\n\n  if (!hasValue && !isNaN(defaultValue)) {\n    inputDefaultValue = format(defaultValue);\n  }\n\n  return (\n    <TextField\n      defaultValue={inputDefaultValue}\n      {...inputProps}\n      onKeyDown={handleKeyDown}\n      onChange={handleChange}\n      value={inputValue}\n      InputProps={{\n        startAdornment: prefix && (\n          <InputAdornment position='start'>{prefix}</InputAdornment>\n        ),\n        endAdornment: suffix && (\n          <InputAdornment position='end'>{suffix}</InputAdornment>\n        )\n      }}\n    />\n  );\n}\n\nexport default NumericInput;\n"],"names":["verifyNumber","string","numericRepresentation","replace","isNumber","isNaN","Number","numberFormat","NumericInput","props","value","precision","thousandChar","decimalChar","prefix","suffix","inputProps","defaultValue","NaN","formatter","useMemo","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","Error","format","number","result","replaceAll","handleKeyDown","e","key","preventDefault","ctrlKey","shiftKey","handleChange","newEvent","currentTarget","name","target","onChange","withPrecision","formattedNumber","hasValue","undefined","inputDefaultValue","inputValue","React","TextField","onKeyDown","InputProps","startAdornment","InputAdornment","position","endAdornment"],"mappings":"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"}